// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id            Int         @id() @default(autoincrement())
  wallet        String      @db.VarChar(30) @default("")
  type          String      @db.Char()
  description   String      @db.VarChar(30)
  quantity      Float?      @db.Real
  unitaryPrice  Float?      @db.Real
  totalPrice    Float?      @db.Real
  currency      String?     @db.VarChar(8)
  rate          Float?      @db.Real
  date          DateTime    @db.Date
  createAt      DateTime?   @db.Timestamp() @default(now())
  updateAt      DateTime?   @db.Timestamp()
}

model Wallet {
  id            String      @id @db.VarChar(30)
  owner         String      @db.VarChar(100)
  createAt      DateTime    @db.Timestamp() @default(now())
  positions     Position[]
  notes         BrokageNotes[]
  snapshots     Snapshots[]
  earnings      Earnings[]
}


model Position {
  id                      Int         @id @default(autoincrement())
  wallet                  Wallet      @relation(fields: [walletId], references: [id])
  walletId                String 
  description             String      @db.VarChar(30)
  quantity                Float       @db.Real()
  averageCost             Float       @db.Real()
  currentPrice            Float       @db.Real()
  currency                String      @db.VarChar(8) @default("BRL")
  balance                 Float       @db.Real() @default(0)
  totalSold               Float       @db.Real() @default(0)
  firstInvestment         DateTime   @db.Date
  lastInvestment          DateTime?   @db.Date
  @@unique([walletId, description, firstInvestment])
}

model BrokageNotes {
  id                      Int         @id @default(autoincrement())
  wallet                  Wallet      @relation(fields: [walletId], references: [id])
  walletId                String      @db.VarChar(30)
  date                    DateTime    @db.Date
  processed               String      @db.VarChar(20)     
  @@unique([walletId, date])
}

model TickerMappings {
  description             String     @id @unique
  ticker                  String     @db.VarChar(30)
}

model Snapshots {
  date                    DateTime    @db.Date
  wallet                  Wallet      @relation(fields: [walletId], references: [id])
  walletId                String 
  description             String      @db.VarChar(30)
  quantity                Float       @db.Real()
  averageCost             Float       @db.Real()
  currentPrice            Float       @db.Real()
  currency                String      @db.VarChar(8) @default("BRL")
  balance                 Float       @db.Real() @default(0)
  totalSold               Float       @db.Real() @default(0)
  firstInvestment         DateTime   @db.Date
  lastInvestment          DateTime?   @db.Date
  @@unique([date, walletId, description])
}

model Earnings {
  date                    DateTime    @db.Date
  wallet                  Wallet      @relation(fields: [walletId], references: [id])
  walletId                String
  ticker                  String      @db.VarChar(30)
  type                    String      @db.VarChar(10)
  currency                String      @db.VarChar(8) @default("BRL")
  value                   Float       @db.Real() @default(0)
  @@unique([walletId, date, ticker, currency, value])
}